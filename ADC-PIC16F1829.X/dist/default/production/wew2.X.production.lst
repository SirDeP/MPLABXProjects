

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Sep 28 14:52:04 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 07/09/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1829 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     008C                     	;# 
    81     008D                     	;# 
    82     008E                     	;# 
    83     0091                     	;# 
    84     0092                     	;# 
    85     0093                     	;# 
    86     0094                     	;# 
    87     0095                     	;# 
    88     0096                     	;# 
    89     0097                     	;# 
    90     0098                     	;# 
    91     0099                     	;# 
    92     009A                     	;# 
    93     009B                     	;# 
    94     009B                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     010C                     	;# 
    99     010D                     	;# 
   100     010E                     	;# 
   101     0111                     	;# 
   102     0112                     	;# 
   103     0113                     	;# 
   104     0114                     	;# 
   105     0115                     	;# 
   106     0116                     	;# 
   107     0117                     	;# 
   108     0118                     	;# 
   109     0119                     	;# 
   110     011A                     	;# 
   111     011B                     	;# 
   112     011D                     	;# 
   113     011E                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     018E                     	;# 
   117     0191                     	;# 
   118     0191                     	;# 
   119     0192                     	;# 
   120     0193                     	;# 
   121     0193                     	;# 
   122     0193                     	;# 
   123     0194                     	;# 
   124     0195                     	;# 
   125     0196                     	;# 
   126     0199                     	;# 
   127     019A                     	;# 
   128     019B                     	;# 
   129     019B                     	;# 
   130     019C                     	;# 
   131     019D                     	;# 
   132     019E                     	;# 
   133     019F                     	;# 
   134     020C                     	;# 
   135     020D                     	;# 
   136     020E                     	;# 
   137     0211                     	;# 
   138     0211                     	;# 
   139     0212                     	;# 
   140     0212                     	;# 
   141     0213                     	;# 
   142     0213                     	;# 
   143     0214                     	;# 
   144     0214                     	;# 
   145     0215                     	;# 
   146     0215                     	;# 
   147     0215                     	;# 
   148     0216                     	;# 
   149     0216                     	;# 
   150     0217                     	;# 
   151     0217                     	;# 
   152     0219                     	;# 
   153     021A                     	;# 
   154     021B                     	;# 
   155     021C                     	;# 
   156     021D                     	;# 
   157     021E                     	;# 
   158     021F                     	;# 
   159     0291                     	;# 
   160     0291                     	;# 
   161     0292                     	;# 
   162     0293                     	;# 
   163     0294                     	;# 
   164     0295                     	;# 
   165     0295                     	;# 
   166     0296                     	;# 
   167     0298                     	;# 
   168     0298                     	;# 
   169     0299                     	;# 
   170     029A                     	;# 
   171     029B                     	;# 
   172     029C                     	;# 
   173     029D                     	;# 
   174     029E                     	;# 
   175     029E                     	;# 
   176     0311                     	;# 
   177     0311                     	;# 
   178     0312                     	;# 
   179     0313                     	;# 
   180     0318                     	;# 
   181     0318                     	;# 
   182     0319                     	;# 
   183     031A                     	;# 
   184     038C                     	;# 
   185     038D                     	;# 
   186     038E                     	;# 
   187     0391                     	;# 
   188     0392                     	;# 
   189     0393                     	;# 
   190     0394                     	;# 
   191     0395                     	;# 
   192     0396                     	;# 
   193     039A                     	;# 
   194     039C                     	;# 
   195     039D                     	;# 
   196     039E                     	;# 
   197     039F                     	;# 
   198     0415                     	;# 
   199     0416                     	;# 
   200     0417                     	;# 
   201     041C                     	;# 
   202     041D                     	;# 
   203     041E                     	;# 
   204     0FE4                     	;# 
   205     0FE5                     	;# 
   206     0FE6                     	;# 
   207     0FE7                     	;# 
   208     0FE8                     	;# 
   209     0FE9                     	;# 
   210     0FEA                     	;# 
   211     0FEB                     	;# 
   212     0FED                     	;# 
   213     0FEE                     	;# 
   214     0FEF                     	;# 
   215     0000                     	;# 
   216     0001                     	;# 
   217     0002                     	;# 
   218     0003                     	;# 
   219     0004                     	;# 
   220     0005                     	;# 
   221     0006                     	;# 
   222     0007                     	;# 
   223     0008                     	;# 
   224     0009                     	;# 
   225     000A                     	;# 
   226     000B                     	;# 
   227     000C                     	;# 
   228     000D                     	;# 
   229     000E                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001E                     	;# 
   244     001F                     	;# 
   245     008C                     	;# 
   246     008D                     	;# 
   247     008E                     	;# 
   248     0091                     	;# 
   249     0092                     	;# 
   250     0093                     	;# 
   251     0094                     	;# 
   252     0095                     	;# 
   253     0096                     	;# 
   254     0097                     	;# 
   255     0098                     	;# 
   256     0099                     	;# 
   257     009A                     	;# 
   258     009B                     	;# 
   259     009B                     	;# 
   260     009C                     	;# 
   261     009D                     	;# 
   262     009E                     	;# 
   263     010C                     	;# 
   264     010D                     	;# 
   265     010E                     	;# 
   266     0111                     	;# 
   267     0112                     	;# 
   268     0113                     	;# 
   269     0114                     	;# 
   270     0115                     	;# 
   271     0116                     	;# 
   272     0117                     	;# 
   273     0118                     	;# 
   274     0119                     	;# 
   275     011A                     	;# 
   276     011B                     	;# 
   277     011D                     	;# 
   278     011E                     	;# 
   279     018C                     	;# 
   280     018D                     	;# 
   281     018E                     	;# 
   282     0191                     	;# 
   283     0191                     	;# 
   284     0192                     	;# 
   285     0193                     	;# 
   286     0193                     	;# 
   287     0193                     	;# 
   288     0194                     	;# 
   289     0195                     	;# 
   290     0196                     	;# 
   291     0199                     	;# 
   292     019A                     	;# 
   293     019B                     	;# 
   294     019B                     	;# 
   295     019C                     	;# 
   296     019D                     	;# 
   297     019E                     	;# 
   298     019F                     	;# 
   299     020C                     	;# 
   300     020D                     	;# 
   301     020E                     	;# 
   302     0211                     	;# 
   303     0211                     	;# 
   304     0212                     	;# 
   305     0212                     	;# 
   306     0213                     	;# 
   307     0213                     	;# 
   308     0214                     	;# 
   309     0214                     	;# 
   310     0215                     	;# 
   311     0215                     	;# 
   312     0215                     	;# 
   313     0216                     	;# 
   314     0216                     	;# 
   315     0217                     	;# 
   316     0217                     	;# 
   317     0219                     	;# 
   318     021A                     	;# 
   319     021B                     	;# 
   320     021C                     	;# 
   321     021D                     	;# 
   322     021E                     	;# 
   323     021F                     	;# 
   324     0291                     	;# 
   325     0291                     	;# 
   326     0292                     	;# 
   327     0293                     	;# 
   328     0294                     	;# 
   329     0295                     	;# 
   330     0295                     	;# 
   331     0296                     	;# 
   332     0298                     	;# 
   333     0298                     	;# 
   334     0299                     	;# 
   335     029A                     	;# 
   336     029B                     	;# 
   337     029C                     	;# 
   338     029D                     	;# 
   339     029E                     	;# 
   340     029E                     	;# 
   341     0311                     	;# 
   342     0311                     	;# 
   343     0312                     	;# 
   344     0313                     	;# 
   345     0318                     	;# 
   346     0318                     	;# 
   347     0319                     	;# 
   348     031A                     	;# 
   349     038C                     	;# 
   350     038D                     	;# 
   351     038E                     	;# 
   352     0391                     	;# 
   353     0392                     	;# 
   354     0393                     	;# 
   355     0394                     	;# 
   356     0395                     	;# 
   357     0396                     	;# 
   358     039A                     	;# 
   359     039C                     	;# 
   360     039D                     	;# 
   361     039E                     	;# 
   362     039F                     	;# 
   363     0415                     	;# 
   364     0416                     	;# 
   365     0417                     	;# 
   366     041C                     	;# 
   367     041D                     	;# 
   368     041E                     	;# 
   369     0FE4                     	;# 
   370     0FE5                     	;# 
   371     0FE6                     	;# 
   372     0FE7                     	;# 
   373     0FE8                     	;# 
   374     0FE9                     	;# 
   375     0FEA                     	;# 
   376     0FEB                     	;# 
   377     0FED                     	;# 
   378     0FEE                     	;# 
   379     0FEF                     	;# 
   380     009B                     _ADRES	set	155
   381     008E                     _TRISC	set	142
   382     008C                     _TRISAbits	set	140
   383     0099                     _OSCCONbits	set	153
   384     009E                     _ADCON1bits	set	158
   385     009D                     _ADCON0	set	157
   386     04E9                     _GO	set	1257
   387     010E                     _LATCbits	set	270
   388     010E                     _LATC	set	270
   389     018C                     _ANSELAbits	set	396
   390                           
   391                           	psect	cinit
   392     07F4                     start_initialization:	
   393                           ; #config settings
   394                           
   395     07F4                     __initialization:
   396                           
   397                           ; Clear objects allocated to BANK0
   398     07F4  0020               	movlb	0	; select bank0
   399     07F5  01AC               	clrf	__pbssBANK0& (0+127)
   400     07F6  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   401     07F7  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   402     07F8  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   403     07F9  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   404     07FA  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   405     07FB  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   406     07FC  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   407     07FD                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410     07FD                     __end_of__initialization:
   411     07FD  0020               	movlb	0
   412     07FE  3187  2F43         	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssBANK0
   415     002C                     __pbssBANK0:
   416     002C                     main@F2481:
   417     002C                     	ds	8
   418                           
   419                           	psect	cstackCOMMON
   420     0070                     __pcstackCOMMON:
   421     0070                     ?_pic_init:
   422     0070                     ??_pic_init:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ?_init_osc:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ??_init_osc:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_init_gpio:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ??_init_gpio:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ?___wmul:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ___wmul@multiplier:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 2 bytes @ 0x0
   448     0070                     	ds	2
   449     0072                     ___wmul@multiplicand:
   450                           
   451                           ; 2 bytes @ 0x2
   452     0072                     	ds	2
   453     0074                     ??___wmul:
   454     0074                     ___wmul@product:	
   455                           ; 1 bytes @ 0x4
   456                           
   457                           
   458                           ; 2 bytes @ 0x4
   459     0074                     	ds	2
   460     0076                     ??_main:
   461                           
   462                           ; 1 bytes @ 0x6
   463     0076                     	ds	4
   464                           
   465                           	psect	cstackBANK0
   466     0020                     __pcstackBANK0:
   467     0020                     main@ADR:
   468                           
   469                           ; 8 bytes @ 0x0
   470     0020                     	ds	8
   471     0028                     main@i:
   472                           
   473                           ; 2 bytes @ 0x8
   474     0028                     	ds	2
   475     002A                     main@i_179:
   476                           
   477                           ; 2 bytes @ 0xA
   478     002A                     	ds	2
   479                           
   480                           	psect	maintext
   481     0743                     __pmaintext:	
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 76 in file "newmain.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  i               2   10[BANK0 ] int 
   492 ;;  i               2    8[BANK0 ] int 
   493 ;;  ADR             8    0[BANK0 ] int [4]
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : B1F/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   504 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   505 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   506 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   507 ;;Total ram usage:       16 bytes
   508 ;; Hardware stack levels required when called: 2
   509 ;; This function calls:
   510 ;;		___wmul
   511 ;;		_pic_init
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517     0743                     _main:	
   518                           ;psect for function _main
   519                           
   520     0743                     l757:	
   521                           ;incstack = 0
   522                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   523                           
   524                           
   525                           ;newmain.c: 78:     ADCON0 = 0b00001111;
   526     0743  300F               	movlw	15
   527     0744  0021               	movlb	1	; select bank1
   528     0745  009D               	movwf	29	;volatile
   529     0746                     l759:
   530                           
   531                           ;newmain.c: 79:     ADCON1bits.ADFM = 1;
   532     0746  179E               	bsf	30,7	;volatile
   533     0747                     l761:
   534                           
   535                           ;newmain.c: 82:     pic_init();
   536     0747  3187  2707  3187   	fcall	_pic_init
   537     074A                     l763:
   538                           
   539                           ;newmain.c: 83:     int ADR[4] = {0};
   540     074A  3020               	movlw	low main@ADR
   541     074B  0086               	movwf	6
   542     074C  3000               	movlw	high main@ADR
   543     074D  0087               	movwf	7
   544     074E  3008               	movlw	8
   545     074F  00F6               	movwf	??_main
   546     0750  3000               	movlw	0
   547     0751                     u170:
   548     0751  001E               	movwi fsr1++
   549     0752  0BF6               	decfsz	??_main,f
   550     0753  2F51               	goto	u170
   551     0754                     l765:
   552                           
   553                           ;newmain.c: 84:     ADR[0] = 1023 / (4 + 1);
   554     0754  30CC               	movlw	204
   555     0755  0020               	movlb	0	; select bank0
   556     0756  00A0               	movwf	main@ADR
   557     0757  3000               	movlw	0
   558     0758  00A1               	movwf	main@ADR+1
   559     0759                     l767:
   560                           
   561                           ;newmain.c: 85:     for (int i = 1; i < 4; i++)
   562     0759  3001               	movlw	1
   563     075A  00A8               	movwf	main@i
   564     075B  3000               	movlw	0
   565     075C  00A9               	movwf	main@i+1
   566     075D                     l773:
   567                           
   568                           ;newmain.c: 86:         {;newmain.c: 87:         ADR[i] = ADR[0] * (i + 1);
   569     075D  0020               	movlb	0	; select bank0
   570     075E  0828               	movf	main@i,w
   571     075F  3E01               	addlw	1
   572     0760  00F0               	movwf	___wmul@multiplier
   573     0761  3000               	movlw	0
   574     0762  3D29               	addwfc	main@i+1,w
   575     0763  00F1               	movwf	___wmul@multiplier+1
   576     0764  0821               	movf	main@ADR+1,w
   577     0765  00F3               	movwf	___wmul@multiplicand+1
   578     0766  0820               	movf	main@ADR,w
   579     0767  00F2               	movwf	___wmul@multiplicand
   580     0768  3187  2724  3187   	fcall	___wmul
   581     076B  0020               	movlb	0	; select bank0
   582     076C  3528               	lslf	main@i,w
   583     076D  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   584     076E  0086               	movwf	6
   585     076F  0187               	clrf	7
   586     0770  0870               	movf	?___wmul,w
   587     0771  3FC0               	movwi [0]fsr1
   588     0772  0871               	movf	?___wmul+1,w
   589     0773  3FC1               	movwi [1]fsr1
   590     0774                     l775:
   591                           
   592                           ;newmain.c: 88:         }
   593     0774  3001               	movlw	1
   594     0775  07A8               	addwf	main@i,f
   595     0776  3000               	movlw	0
   596     0777  3DA9               	addwfc	main@i+1,f
   597     0778                     l777:
   598     0778  0829               	movf	main@i+1,w
   599     0779  3A80               	xorlw	128
   600     077A  00F6               	movwf	??_main
   601     077B  3080               	movlw	128
   602     077C  0276               	subwf	??_main,w
   603     077D  1D03               	skipz
   604     077E  2F81               	goto	u185
   605     077F  3004               	movlw	4
   606     0780  0228               	subwf	main@i,w
   607     0781                     u185:
   608     0781  1C03               	skipc
   609     0782  2F84               	goto	u181
   610     0783  2F85               	goto	u180
   611     0784                     u181:
   612     0784  2F5D               	goto	l773
   613     0785                     u180:
   614     0785                     l37:	
   615                           ;newmain.c: 89:     while (1)
   616                           
   617                           
   618                           ;newmain.c: 90:         {;newmain.c: 91:         _delay((unsigned long)((5)*(5000000/400
      +                          0000.0)));
   619     0785  3200               	nop2	;2 cycle nop
   620     0786  3200               	nop2	;2 cycle nop
   621     0787  3200               	nop2	;2 cycle nop
   622                           
   623                           ;newmain.c: 92:         GO = 1;
   624     0788  0021               	movlb	1	; select bank1
   625     0789  149D               	bsf	29,1	;volatile
   626     078A                     l38:	
   627                           ;newmain.c: 94:         while (GO)continue;
   628                           
   629     078A  189D               	btfsc	29,1	;volatile
   630     078B  2F8D               	goto	u191
   631     078C  2F8E               	goto	u190
   632     078D                     u191:
   633     078D  2F8A               	goto	l38
   634     078E                     u190:
   635     078E                     l779:
   636                           
   637                           ;newmain.c: 95:         for (int i = 0; i < 4; i++)
   638     078E  0020               	movlb	0	; select bank0
   639     078F  01AA               	clrf	main@i_179
   640     0790  01AB               	clrf	main@i_179+1
   641     0791                     l785:
   642                           
   643                           ;newmain.c: 96:             {;newmain.c: 97:             if (ADRES > (ADR[i] - 20))
   644     0791  0020               	movlb	0	; select bank0
   645     0792  352A               	lslf	main@i_179,w
   646     0793  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   647     0794  0086               	movwf	6
   648     0795  0187               	clrf	7
   649     0796  3F40               	moviw [0]fsr1
   650     0797  00F6               	movwf	??_main
   651     0798  3F41               	moviw [1]fsr1
   652     0799  00F7               	movwf	??_main+1
   653     079A  0876               	movf	??_main,w
   654     079B  3EEC               	addlw	236
   655     079C  00F8               	movwf	??_main+2
   656     079D  30FF               	movlw	255
   657     079E  3D77               	addwfc	??_main+1,w
   658     079F  00F9               	movwf	??_main+3
   659     07A0  0021               	movlb	1	; select bank1
   660     07A1  081C               	movf	28,w	;volatile
   661     07A2  0279               	subwf	??_main+3,w
   662     07A3  1D03               	skipz
   663     07A4  2FA7               	goto	u205
   664     07A5  081B               	movf	27,w	;volatile
   665     07A6  0278               	subwf	??_main+2,w
   666     07A7                     u205:
   667     07A7  1803               	skipnc
   668     07A8  2FAA               	goto	u201
   669     07A9  2FAB               	goto	u200
   670     07AA                     u201:
   671     07AA  2FB8               	goto	l789
   672     07AB                     u200:
   673     07AB                     l787:
   674                           
   675                           ;newmain.c: 98:                 {;newmain.c: 99:                 LATC = (unsigned char)(
      +                          LATC | (1 << i));
   676     07AB  3001               	movlw	1
   677     07AC  00F6               	movwf	??_main
   678     07AD  0020               	movlb	0	; select bank0
   679     07AE  0A2A               	incf	main@i_179,w
   680     07AF  2FB1               	goto	u214
   681     07B0                     u215:
   682     07B0  35F6               	lslf	??_main,f
   683     07B1                     u214:
   684     07B1  0B89               	decfsz	9,f
   685     07B2  2FB0               	goto	u215
   686     07B3  0876               	movf	??_main,w
   687     07B4  0022               	movlb	2	; select bank2
   688     07B5  040E               	iorwf	14,w	;volatile
   689     07B6  008E               	movwf	14	;volatile
   690                           
   691                           ;newmain.c: 100:                 }
   692     07B7  2FDF               	goto	l793
   693     07B8                     l789:
   694     07B8  0020               	movlb	0	; select bank0
   695     07B9  352A               	lslf	main@i_179,w
   696     07BA  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   697     07BB  0086               	movwf	6
   698     07BC  0187               	clrf	7
   699     07BD  3F40               	moviw [0]fsr1
   700     07BE  00F6               	movwf	??_main
   701     07BF  3F41               	moviw [1]fsr1
   702     07C0  00F7               	movwf	??_main+1
   703     07C1  0876               	movf	??_main,w
   704     07C2  3EEC               	addlw	236
   705     07C3  00F8               	movwf	??_main+2
   706     07C4  30FF               	movlw	255
   707     07C5  3D77               	addwfc	??_main+1,w
   708     07C6  00F9               	movwf	??_main+3
   709     07C7  0021               	movlb	1	; select bank1
   710     07C8  081C               	movf	28,w	;volatile
   711     07C9  0279               	subwf	??_main+3,w
   712     07CA  1D03               	skipz
   713     07CB  2FCE               	goto	u225
   714     07CC  081B               	movf	27,w	;volatile
   715     07CD  0278               	subwf	??_main+2,w
   716     07CE                     u225:
   717     07CE  1C03               	skipc
   718     07CF  2FD1               	goto	u221
   719     07D0  2FD2               	goto	u220
   720     07D1                     u221:
   721     07D1  2FDF               	goto	l793
   722     07D2                     u220:
   723     07D2                     l791:
   724                           
   725                           ;newmain.c: 102:                 {;newmain.c: 103:                 LATC = (unsigned char
      +                          )(LATC & ~(1 << i));
   726     07D2  3001               	movlw	1
   727     07D3  00F6               	movwf	??_main
   728     07D4  0020               	movlb	0	; select bank0
   729     07D5  0A2A               	incf	main@i_179,w
   730     07D6  2FD8               	goto	u234
   731     07D7                     u235:
   732     07D7  35F6               	lslf	??_main,f
   733     07D8                     u234:
   734     07D8  0B89               	decfsz	9,f
   735     07D9  2FD7               	goto	u235
   736     07DA  0876               	movf	??_main,w
   737     07DB  3AFF               	xorlw	255
   738     07DC  0022               	movlb	2	; select bank2
   739     07DD  050E               	andwf	14,w	;volatile
   740     07DE  008E               	movwf	14	;volatile
   741     07DF                     l793:
   742                           
   743                           ;newmain.c: 105:             }
   744     07DF  3001               	movlw	1
   745     07E0  0020               	movlb	0	; select bank0
   746     07E1  07AA               	addwf	main@i_179,f
   747     07E2  3000               	movlw	0
   748     07E3  3DAB               	addwfc	main@i_179+1,f
   749     07E4                     l795:
   750     07E4  082B               	movf	main@i_179+1,w
   751     07E5  3A80               	xorlw	128
   752     07E6  00F6               	movwf	??_main
   753     07E7  3080               	movlw	128
   754     07E8  0276               	subwf	??_main,w
   755     07E9  1D03               	skipz
   756     07EA  2FED               	goto	u245
   757     07EB  3004               	movlw	4
   758     07EC  022A               	subwf	main@i_179,w
   759     07ED                     u245:
   760     07ED  1C03               	skipc
   761     07EE  2FF0               	goto	u241
   762     07EF  2FF1               	goto	u240
   763     07F0                     u241:
   764     07F0  2F91               	goto	l785
   765     07F1                     u240:
   766     07F1  2F85               	goto	l37
   767     07F2  3180  2802         	ljmp	start
   768     07F4                     __end_of_main:
   769                           
   770                           	psect	text1
   771     0707                     __ptext1:	
   772 ;; *************** function _pic_init *****************
   773 ;; Defined at:
   774 ;;		line 130 in file "newmain.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, pclath, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 1
   795 ;; This function calls:
   796 ;;		_init_gpio
   797 ;;		_init_osc
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803     0707                     _pic_init:	
   804                           ;psect for function _pic_init
   805                           
   806     0707                     l739:	
   807                           ;incstack = 0
   808                           ; Regs used in _pic_init: [wreg+status,2+status,0+pclath+cstack]
   809                           
   810                           
   811                           ;newmain.c: 132:     init_osc();
   812     0707  3187  270E  3187   	fcall	_init_osc
   813     070A                     l741:
   814                           
   815                           ;newmain.c: 133:     init_gpio();
   816     070A  3187  2717  3187   	fcall	_init_gpio
   817     070D                     l51:
   818     070D  0008               	return
   819     070E                     __end_of_pic_init:
   820                           
   821                           	psect	text2
   822     070E                     __ptext2:	
   823 ;; *************** function _init_osc *****************
   824 ;; Defined at:
   825 ;;		line 136 in file "newmain.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_pic_init
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852     070E                     _init_osc:	
   853                           ;psect for function _init_osc
   854                           
   855     070E                     l731:	
   856                           ;incstack = 0
   857                           ; Regs used in _init_osc: [wreg+status,2+status,0]
   858                           
   859                           
   860                           ;newmain.c: 140:     OSCCONbits.SCS = 0b00;
   861     070E  30FC               	movlw	-4
   862     070F  0021               	movlb	1	; select bank1
   863     0710  0599               	andwf	25,f	;volatile
   864                           
   865                           ;newmain.c: 142:     OSCCONbits.IRCF = 0b0111;
   866     0711  0819               	movf	25,w	;volatile
   867     0712  3987               	andlw	-121
   868     0713  3838               	iorlw	56
   869     0714  0099               	movwf	25	;volatile
   870     0715                     l733:
   871                           
   872                           ;newmain.c: 144:     OSCCONbits.SPLLEN = 0b0;
   873     0715  1399               	bcf	25,7	;volatile
   874     0716                     l54:
   875     0716  0008               	return
   876     0717                     __end_of_init_osc:
   877                           
   878                           	psect	text3
   879     0717                     __ptext3:	
   880 ;; *************** function _init_gpio *****************
   881 ;; Defined at:
   882 ;;		line 149 in file "newmain.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		status,2
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_pic_init
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909     0717                     _init_gpio:	
   910                           ;psect for function _init_gpio
   911                           
   912     0717                     l735:	
   913                           ;incstack = 0
   914                           ; Regs used in _init_gpio: [status,2]
   915                           
   916                           
   917                           ;newmain.c: 151:     LATCbits.LATC0 = 0;
   918     0717  0022               	movlb	2	; select bank2
   919     0718  100E               	bcf	14,0	;volatile
   920                           
   921                           ;newmain.c: 153:     TRISAbits.TRISA2 = 1;
   922     0719  0021               	movlb	1	; select bank1
   923     071A  150C               	bsf	12,2	;volatile
   924                           
   925                           ;newmain.c: 154:     TRISAbits.TRISA4 = 1;
   926     071B  160C               	bsf	12,4	;volatile
   927                           
   928                           ;newmain.c: 156:     ANSELAbits.ANSA2 = 0;
   929     071C  0023               	movlb	3	; select bank3
   930     071D  110C               	bcf	12,2	;volatile
   931                           
   932                           ;newmain.c: 157:     ANSELAbits.ANSA4 = 1;
   933     071E  160C               	bsf	12,4	;volatile
   934     071F                     l737:
   935                           
   936                           ;newmain.c: 160:     TRISC = 0;
   937     071F  0021               	movlb	1	; select bank1
   938     0720  018E               	clrf	14	;volatile
   939                           
   940                           ;newmain.c: 161:     LATC = 0;
   941     0721  0022               	movlb	2	; select bank2
   942     0722  018E               	clrf	14	;volatile
   943     0723                     l57:
   944     0723  0008               	return
   945     0724                     __end_of_init_gpio:
   946                           
   947                           	psect	text4
   948     0724                     __ptext4:	
   949 ;; *************** function ___wmul *****************
   950 ;; Defined at:
   951 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  multiplier      2    0[COMMON] unsigned int 
   954 ;;  multiplicand    2    2[COMMON] unsigned int 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  product         2    4[COMMON] unsigned int 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2    0[COMMON] unsigned int 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   969 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   970 ;;Total ram usage:        6 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979     0724                     ___wmul:	
   980                           ;psect for function ___wmul
   981                           
   982     0724                     l743:	
   983                           ;incstack = 0
   984                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   985                           
   986     0724  01F4               	clrf	___wmul@product
   987     0725  01F5               	clrf	___wmul@product+1
   988     0726                     l745:
   989     0726  1C70               	btfss	___wmul@multiplier,0
   990     0727  2F29               	goto	u131
   991     0728  2F2A               	goto	u130
   992     0729                     u131:
   993     0729  2F2E               	goto	l207
   994     072A                     u130:
   995     072A                     l747:
   996     072A  0872               	movf	___wmul@multiplicand,w
   997     072B  07F4               	addwf	___wmul@product,f
   998     072C  0873               	movf	___wmul@multiplicand+1,w
   999     072D  3DF5               	addwfc	___wmul@product+1,f
  1000     072E                     l207:
  1001     072E  3001               	movlw	1
  1002     072F                     u145:
  1003     072F  35F2               	lslf	___wmul@multiplicand,f
  1004     0730  0DF3               	rlf	___wmul@multiplicand+1,f
  1005     0731  0B89               	decfsz	9,f
  1006     0732  2F2F               	goto	u145
  1007     0733                     l749:
  1008     0733  3001               	movlw	1
  1009     0734                     u155:
  1010     0734  36F1               	lsrf	___wmul@multiplier+1,f
  1011     0735  0CF0               	rrf	___wmul@multiplier,f
  1012     0736  0B89               	decfsz	9,f
  1013     0737  2F34               	goto	u155
  1014     0738                     l751:
  1015     0738  0870               	movf	___wmul@multiplier,w
  1016     0739  0471               	iorwf	___wmul@multiplier+1,w
  1017     073A  1D03               	btfss	3,2
  1018     073B  2F3D               	goto	u161
  1019     073C  2F3E               	goto	u160
  1020     073D                     u161:
  1021     073D  2F26               	goto	l745
  1022     073E                     u160:
  1023     073E                     l753:
  1024     073E  0875               	movf	___wmul@product+1,w
  1025     073F  00F1               	movwf	?___wmul+1
  1026     0740  0874               	movf	___wmul@product,w
  1027     0741  00F0               	movwf	?___wmul
  1028     0742                     l209:
  1029     0742  0008               	return
  1030     0743                     __end_of___wmul:
  1031     007E                     btemp	set	126	;btemp
  1032     007E                     wtemp0	set	126
  1033                           
  1034                           	psect	config
  1035                           
  1036                           ;Config register CONFIG1 @ 0x8007
  1037                           ;	Oscillator Selection
  1038                           ;	FOSC = 0x4, user specified literal
  1039                           ;	Watchdog Timer Enable
  1040                           ;	WDTE = 0x0, user specified literal
  1041                           ;	Power-up Timer Enable
  1042                           ;	PWRTE = 0x1, user specified literal
  1043                           ;	MCLR Pin Function Select
  1044                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1045                           ;	Flash Program Memory Code Protection
  1046                           ;	CP = OFF, Program memory code protection is disabled
  1047                           ;	Data Memory Code Protection
  1048                           ;	CPD = OFF, Data memory code protection is disabled
  1049                           ;	Brown-out Reset Enable
  1050                           ;	BOREN = ON, Brown-out Reset enabled
  1051                           ;	Clock Out Enable
  1052                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1053                           ;	Internal/External Switchover
  1054                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1055                           ;	Fail-Safe Clock Monitor Enable
  1056                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1057     8007                     	org	32775
  1058     8007  0FA4               	dw	4004
  1059                           
  1060                           ;Config register CONFIG2 @ 0x8008
  1061                           ;	Flash Memory Self-Write Protection
  1062                           ;	WRT = OFF, Write protection off
  1063                           ;	PLL Enable
  1064                           ;	PLLEN = OFF, 4x PLL disabled
  1065                           ;	Stack Overflow/Underflow Reset Enable
  1066                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1067                           ;	Brown-out Reset Voltage Selection
  1068                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1069                           ;	In-Circuit Debugger Mode
  1070                           ;	DEBUG = 0x1, unprogrammed default
  1071                           ;	Low-Voltage Programming Enable
  1072                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1073     8008                     	org	32776
  1074     8008  1CFF               	dw	7423

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     12      20
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     562
                                              6 COMMON     4     4      0
                                              0 BANK0     12    12      0
                             ___wmul
                           _pic_init
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
                          _init_gpio
                           _init_osc
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_gpio                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _pic_init
     _init_gpio
     _init_osc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      14       5       25.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Sep 28 14:52:04 2023

                     l51 070D                       l37 0785                       l54 0716  
                     l38 078A                       l57 0723                       _GO 04E9  
    ___wmul@multiplicand 0072                      l207 072E                      l209 0742  
                    l731 070E                      l733 0715                      l741 070A  
                    l751 0738                      l743 0724                      l735 0717  
                    l753 073E                      l745 0726                      l737 071F  
                    l761 0747                      l747 072A                      l739 0707  
                    l763 074A                      l749 0733                      l773 075D  
                    l765 0754                      l757 0743                      l791 07D2  
                    l775 0774                      l767 0759                      l759 0746  
                    l793 07DF                      l785 0791                      l777 0778  
                    l795 07E4                      l787 07AB                      l779 078E  
                    l789 07B8                      u200 07AB                      u201 07AA  
                    u130 072A                      u131 0729                      u220 07D2  
                    u221 07D1                      u205 07A7                      u214 07B1  
                    u215 07B0                      u160 073E                      u240 07F1  
                    u161 073D                      u145 072F                      u241 07F0  
                    u225 07CE                      u234 07D8                      u170 0751  
                    u155 0734                      u235 07D7                      u180 0785  
                    u245 07ED                      u181 0784                      u190 078E  
                    u191 078D                      u185 0781                      wreg 0009  
                   _LATC 010E                     _main 0743                     fsr1h 0007  
                   fsr1l 0006                     btemp 007E                     start 0002  
                  ?_main 0070                    _ADRES 009B                    _TRISC 008E  
                  main@i 0028                    status 0003                    wtemp0 007E  
        __initialization 07F4             __end_of_main 07F4                   ??_main 0076  
                 _ADCON0 009D                   ___wmul 0724         __end_of_init_osc 0717  
       __end_of_pic_init 070E  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pbssBANK0 002C               __pmaintext 0743                  ?___wmul 0070  
              ?_init_osc 0070                ?_pic_init 0070                  __ptext1 0707  
                __ptext2 070E                  __ptext3 0717                  __ptext4 0724  
      __end_of_init_gpio 0724                  main@ADR 0020     end_of_initialization 07FD  
             ??_init_osc 0070               ??_pic_init 0070                _TRISAbits 008C  
         __end_of___wmul 0743      start_initialization 07F4                 ??___wmul 0074  
              ___latbits 0002            __pcstackBANK0 0020                _init_gpio 0717  
         ___wmul@product 0074                 _LATCbits 010E                main@F2481 002C  
             _ADCON1bits 009E                main@i_179 002A        ___wmul@multiplier 0070  
             ?_init_gpio 0070               _ANSELAbits 018C                 _init_osc 070E  
               _pic_init 0707              ??_init_gpio 0070               _OSCCONbits 0099  
