

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Oct 30 11:33:27 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 17/08/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     008F                     	;# 
    95     0090                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009A                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     0105                     	;# 
   114     0107                     	;# 
   115     0108                     	;# 
   116     0109                     	;# 
   117     010C                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     0185                     	;# 
   123     0187                     	;# 
   124     0188                     	;# 
   125     0189                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0000                     	;# 
   129     0001                     	;# 
   130     0002                     	;# 
   131     0003                     	;# 
   132     0004                     	;# 
   133     0005                     	;# 
   134     0006                     	;# 
   135     0007                     	;# 
   136     0008                     	;# 
   137     0009                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000D                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001B                     	;# 
   159     001C                     	;# 
   160     001D                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     0087                     	;# 
   167     0088                     	;# 
   168     0089                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     008F                     	;# 
   173     0090                     	;# 
   174     0091                     	;# 
   175     0092                     	;# 
   176     0093                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0094                     	;# 
   180     0095                     	;# 
   181     0096                     	;# 
   182     0097                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009A                     	;# 
   186     009B                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     009F                     	;# 
   191     0105                     	;# 
   192     0107                     	;# 
   193     0108                     	;# 
   194     0109                     	;# 
   195     010C                     	;# 
   196     010C                     	;# 
   197     010D                     	;# 
   198     010E                     	;# 
   199     010F                     	;# 
   200     0185                     	;# 
   201     0187                     	;# 
   202     0188                     	;# 
   203     0189                     	;# 
   204     018C                     	;# 
   205     018D                     	;# 
   206     001F                     _ADCON0bits	set	31
   207     0005                     _PORTA	set	5
   208     001E                     _ADRESH	set	30
   209     00F9                     _GO	set	249
   210     008F                     _OSCCONbits	set	143
   211     009F                     _ADCON1bits	set	159
   212     0089                     _TRISEbits	set	137
   213     0085                     _TRISA	set	133
   214     009E                     _ADRESL	set	158
   215     0188                     _ANSELbits	set	392
   216     0189                     _ANSELH	set	393
   217     0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220     07F2                     start_initialization:	
   221                           ; #config settings
   222                           
   223     07F2                     __initialization:
   224                           
   225                           ; Clear objects allocated to BANK0
   226     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   227     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   228     07F4  01AE               	clrf	__pbssBANK0& (0+127)
   229     07F5  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   230     07F6  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   231     07F7  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   232     07F8  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   233     07F9  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   234     07FA  01B4               	clrf	(__pbssBANK0+6)& (0+127)
   235     07FB  01B5               	clrf	(__pbssBANK0+7)& (0+127)
   236     07FC                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239     07FC                     __end_of__initialization:
   240     07FC  0183               	clrf	3
   241     07FD  120A  118A  2F13   	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssBANK0
   244     002E                     __pbssBANK0:
   245     002E                     main@F1296:
   246     002E                     	ds	8
   247                           
   248                           	psect	cstackCOMMON
   249     0071                     __pcstackCOMMON:
   250     0071                     ?_pic_init:
   251     0071                     ??_pic_init:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0071                     ?_init_osc:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0071                     ??_init_osc:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0071                     ?_init_gpio:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0071                     ??_init_gpio:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0071                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0071                     ?___wmul:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0071                     ___wmul@multiplier:	
   273                           ; 2 bytes @ 0x0
   274                           
   275                           
   276                           ; 2 bytes @ 0x0
   277     0071                     	ds	2
   278     0073                     ___wmul@multiplicand:
   279                           
   280                           ; 2 bytes @ 0x2
   281     0073                     	ds	2
   282     0075                     ??___wmul:
   283     0075                     ___wmul@product:	
   284                           ; 1 bytes @ 0x4
   285                           
   286                           
   287                           ; 2 bytes @ 0x4
   288     0075                     	ds	2
   289     0077                     ??_main:
   290                           
   291                           ; 1 bytes @ 0x6
   292     0077                     	ds	6
   293                           
   294                           	psect	cstackBANK0
   295     0020                     __pcstackBANK0:
   296     0020                     main@ADR:
   297                           
   298                           ; 8 bytes @ 0x0
   299     0020                     	ds	8
   300     0028                     main@ADRES:
   301                           
   302                           ; 2 bytes @ 0x8
   303     0028                     	ds	2
   304     002A                     main@i:
   305                           
   306                           ; 2 bytes @ 0xA
   307     002A                     	ds	2
   308     002C                     main@i_177:
   309                           
   310                           ; 2 bytes @ 0xC
   311     002C                     	ds	2
   312                           
   313                           	psect	maintext
   314     0713                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 42 in file "newmain.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  i               2   12[BANK0 ] int 
   325 ;;  ADRES           2    8[BANK0 ] int 
   326 ;;  i               2   10[BANK0 ] int 
   327 ;;  ADR             8    0[BANK0 ] int [4]
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0      14       0       0       0
   339 ;;      Temps:          6       0       0       0       0
   340 ;;      Totals:         6      14       0       0       0
   341 ;;Total ram usage:       20 bytes
   342 ;; Hardware stack levels required when called: 2
   343 ;; This function calls:
   344 ;;		___wmul
   345 ;;		_pic_init
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351     0713                     _main:	
   352                           ;psect for function _main
   353                           
   354     0713                     l726:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   357                           
   358                           
   359                           ;newmain.c: 45:     pic_init();
   360     0713  120A  118A  26C7  120A  118A  	fcall	_pic_init
   361     0718                     l728:
   362                           
   363                           ;newmain.c: 46:     int ADR[4] = {0};
   364     0718  3020               	movlw	main@ADR& (0+255)
   365     0719  0084               	movwf	4
   366     071A  3008               	movlw	8
   367     071B  00FF               	movwf	btemp+1
   368     071C                     u190:
   369     071C  1383               	bcf	3,7	;select IRP bank0
   370     071D  0180               	clrf	0
   371     071E  0A84               	incf	4,f
   372     071F  0BFF               	decfsz	btemp+1,f
   373     0720  2F1C               	goto	u190
   374     0721                     l730:
   375                           
   376                           ;newmain.c: 47:     ADR[0] = 1023 / (4 + 1);
   377     0721  30CC               	movlw	204
   378     0722  1283               	bcf	3,5	;RP0=0, select bank0
   379     0723  1303               	bcf	3,6	;RP1=0, select bank0
   380     0724  00A0               	movwf	main@ADR
   381     0725  3000               	movlw	0
   382     0726  00A1               	movwf	main@ADR+1
   383     0727                     l732:
   384                           
   385                           ;newmain.c: 49:     for (int i = 1; i < 4; i++)
   386     0727  3001               	movlw	1
   387     0728  00AA               	movwf	main@i
   388     0729  3000               	movlw	0
   389     072A  00AB               	movwf	main@i+1
   390     072B                     l738:
   391                           
   392                           ;newmain.c: 50:         ADR[i] = ADR[0] * (i + 1);
   393     072B  1283               	bcf	3,5	;RP0=0, select bank0
   394     072C  1303               	bcf	3,6	;RP1=0, select bank0
   395     072D  082A               	movf	main@i,w
   396     072E  3E01               	addlw	1
   397     072F  00F1               	movwf	___wmul@multiplier
   398     0730  082B               	movf	main@i+1,w
   399     0731  1803               	skipnc
   400     0732  3E01               	addlw	1
   401     0733  3E00               	addlw	0
   402     0734  00F2               	movwf	___wmul@multiplier+1
   403     0735  0821               	movf	main@ADR+1,w
   404     0736  00F4               	movwf	___wmul@multiplicand+1
   405     0737  0820               	movf	main@ADR,w
   406     0738  00F3               	movwf	___wmul@multiplicand
   407     0739  120A  118A  26EE  120A  118A  	fcall	___wmul
   408     073E  1283               	bcf	3,5	;RP0=0, select bank0
   409     073F  1303               	bcf	3,6	;RP1=0, select bank0
   410     0740  082A               	movf	main@i,w
   411     0741  00F7               	movwf	??_main
   412     0742  0777               	addwf	??_main,w
   413     0743  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   414     0744  0084               	movwf	4
   415     0745  0871               	movf	?___wmul,w
   416     0746  1383               	bcf	3,7	;select IRP bank0
   417     0747  0080               	movwf	0
   418     0748  0A84               	incf	4,f
   419     0749  0872               	movf	?___wmul+1,w
   420     074A  0080               	movwf	0
   421     074B                     l740:
   422     074B  3001               	movlw	1
   423     074C  07AA               	addwf	main@i,f
   424     074D  1803               	skipnc
   425     074E  0AAB               	incf	main@i+1,f
   426     074F  3000               	movlw	0
   427     0750  07AB               	addwf	main@i+1,f
   428     0751                     l742:
   429     0751  082B               	movf	main@i+1,w
   430     0752  3A80               	xorlw	128
   431     0753  00FF               	movwf	btemp+1
   432     0754  3080               	movlw	128
   433     0755  027F               	subwf	btemp+1,w
   434     0756  1D03               	skipz
   435     0757  2F5A               	goto	u205
   436     0758  3004               	movlw	4
   437     0759  022A               	subwf	main@i,w
   438     075A                     u205:
   439     075A  1C03               	skipc
   440     075B  2F5D               	goto	u201
   441     075C  2F5E               	goto	u200
   442     075D                     u201:
   443     075D  2F2B               	goto	l738
   444     075E                     u200:
   445     075E                     l744:
   446                           
   447                           ;newmain.c: 53:     {;newmain.c: 54:         _delay((unsigned long)((5)*(8000000/4000000
      +                          .0)));
   448     075E  3003               	movlw	3
   449     075F  00F7               	movwf	??_main
   450     0760                     u277:
   451     0760  0BF7               	decfsz	??_main,f
   452     0761  2F60               	goto	u277
   453     0762                     l746:
   454                           
   455                           ;newmain.c: 55:         GO = 1;
   456     0762  1283               	bcf	3,5	;RP0=0, select bank0
   457     0763  1303               	bcf	3,6	;RP1=0, select bank0
   458     0764  149F               	bsf	31,1	;volatile
   459     0765                     l42:	
   460                           ;newmain.c: 56:         while (GO)continue;
   461                           
   462     0765  189F               	btfsc	31,1	;volatile
   463     0766  2F68               	goto	u211
   464     0767  2F69               	goto	u210
   465     0768                     u211:
   466     0768  2F65               	goto	l42
   467     0769                     u210:
   468     0769                     l748:
   469                           
   470                           ;newmain.c: 57:         int ADRES = ADRESL + (ADRESH * 256);
   471     0769  081E               	movf	30,w	;volatile
   472     076A  00A9               	movwf	main@ADRES+1
   473     076B  1683               	bsf	3,5	;RP0=1, select bank1
   474     076C  1303               	bcf	3,6	;RP1=0, select bank1
   475     076D  081E               	movf	30,w	;volatile
   476     076E  1283               	bcf	3,5	;RP0=0, select bank0
   477     076F  1303               	bcf	3,6	;RP1=0, select bank0
   478     0770  00A8               	movwf	main@ADRES
   479     0771                     l750:
   480                           
   481                           ;newmain.c: 58:         for (int i = 0; i < 4; i++)
   482     0771  01AC               	clrf	main@i_177
   483     0772  01AD               	clrf	main@i_177+1
   484     0773                     l756:
   485                           
   486                           ;newmain.c: 59:         {;newmain.c: 60:             if (ADRES > (ADR[i] - 20))
   487     0773  1283               	bcf	3,5	;RP0=0, select bank0
   488     0774  1303               	bcf	3,6	;RP1=0, select bank0
   489     0775  082C               	movf	main@i_177,w
   490     0776  00F7               	movwf	??_main
   491     0777  0777               	addwf	??_main,w
   492     0778  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   493     0779  0084               	movwf	4
   494     077A  1383               	bcf	3,7	;select IRP bank0
   495     077B  0800               	movf	0,w
   496     077C  00F8               	movwf	??_main+1
   497     077D  0A84               	incf	4,f
   498     077E  0800               	movf	0,w
   499     077F  00F9               	movwf	??_main+2
   500     0780  0878               	movf	??_main+1,w
   501     0781  3EEC               	addlw	236
   502     0782  00FA               	movwf	??_main+3
   503     0783  0879               	movf	??_main+2,w
   504     0784  1803               	skipnc
   505     0785  3E01               	addlw	1
   506     0786  3EFF               	addlw	255
   507     0787  00FB               	movwf	??_main+4
   508     0788  087B               	movf	??_main+4,w
   509     0789  3A80               	xorlw	128
   510     078A  00FC               	movwf	??_main+5
   511     078B  0829               	movf	main@ADRES+1,w
   512     078C  3A80               	xorlw	128
   513     078D  027C               	subwf	??_main+5,w
   514     078E  1D03               	skipz
   515     078F  2F92               	goto	u225
   516     0790  0828               	movf	main@ADRES,w
   517     0791  027A               	subwf	??_main+3,w
   518     0792                     u225:
   519     0792  1803               	skipnc
   520     0793  2F95               	goto	u221
   521     0794  2F96               	goto	u220
   522     0795                     u221:
   523     0795  2FA7               	goto	l760
   524     0796                     u220:
   525     0796                     l758:
   526                           
   527                           ;newmain.c: 61:                 PORTA &= ~(1 << i);
   528     0796  3001               	movlw	1
   529     0797  00F7               	movwf	??_main
   530     0798  1283               	bcf	3,5	;RP0=0, select bank0
   531     0799  1303               	bcf	3,6	;RP1=0, select bank0
   532     079A  0A2C               	incf	main@i_177,w
   533     079B  2F9E               	goto	u234
   534     079C                     u235:
   535     079C  1003               	clrc
   536     079D  0DF7               	rlf	??_main,f
   537     079E                     u234:
   538     079E  3EFF               	addlw	-1
   539     079F  1D03               	skipz
   540     07A0  2F9C               	goto	u235
   541     07A1  0877               	movf	??_main,w
   542     07A2  3AFF               	xorlw	255
   543     07A3  00F8               	movwf	??_main+1
   544     07A4  0878               	movf	??_main+1,w
   545     07A5  0585               	andwf	5,f	;volatile
   546     07A6  2FD9               	goto	l764
   547     07A7                     l760:
   548     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   549     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   550     07A9  082C               	movf	main@i_177,w
   551     07AA  00F7               	movwf	??_main
   552     07AB  0777               	addwf	??_main,w
   553     07AC  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   554     07AD  0084               	movwf	4
   555     07AE  1383               	bcf	3,7	;select IRP bank0
   556     07AF  0800               	movf	0,w
   557     07B0  00F8               	movwf	??_main+1
   558     07B1  0A84               	incf	4,f
   559     07B2  0800               	movf	0,w
   560     07B3  00F9               	movwf	??_main+2
   561     07B4  0878               	movf	??_main+1,w
   562     07B5  3EEC               	addlw	236
   563     07B6  00FA               	movwf	??_main+3
   564     07B7  0879               	movf	??_main+2,w
   565     07B8  1803               	skipnc
   566     07B9  3E01               	addlw	1
   567     07BA  3EFF               	addlw	255
   568     07BB  00FB               	movwf	??_main+4
   569     07BC  087B               	movf	??_main+4,w
   570     07BD  3A80               	xorlw	128
   571     07BE  00FC               	movwf	??_main+5
   572     07BF  0829               	movf	main@ADRES+1,w
   573     07C0  3A80               	xorlw	128
   574     07C1  027C               	subwf	??_main+5,w
   575     07C2  1D03               	skipz
   576     07C3  2FC6               	goto	u245
   577     07C4  0828               	movf	main@ADRES,w
   578     07C5  027A               	subwf	??_main+3,w
   579     07C6                     u245:
   580     07C6  1C03               	skipc
   581     07C7  2FC9               	goto	u241
   582     07C8  2FCA               	goto	u240
   583     07C9                     u241:
   584     07C9  2FD9               	goto	l764
   585     07CA                     u240:
   586     07CA                     l762:
   587                           
   588                           ;newmain.c: 63:                 PORTA |= (1 << i);
   589     07CA  3001               	movlw	1
   590     07CB  00F7               	movwf	??_main
   591     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   592     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   593     07CE  0A2C               	incf	main@i_177,w
   594     07CF  2FD2               	goto	u254
   595     07D0                     u255:
   596     07D0  1003               	clrc
   597     07D1  0DF7               	rlf	??_main,f
   598     07D2                     u254:
   599     07D2  3EFF               	addlw	-1
   600     07D3  1D03               	skipz
   601     07D4  2FD0               	goto	u255
   602     07D5  0877               	movf	??_main,w
   603     07D6  00F8               	movwf	??_main+1
   604     07D7  0878               	movf	??_main+1,w
   605     07D8  0485               	iorwf	5,f	;volatile
   606     07D9                     l764:
   607                           
   608                           ;newmain.c: 64:         }
   609     07D9  3001               	movlw	1
   610     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   611     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   612     07DC  07AC               	addwf	main@i_177,f
   613     07DD  1803               	skipnc
   614     07DE  0AAD               	incf	main@i_177+1,f
   615     07DF  3000               	movlw	0
   616     07E0  07AD               	addwf	main@i_177+1,f
   617     07E1                     l766:
   618     07E1  082D               	movf	main@i_177+1,w
   619     07E2  3A80               	xorlw	128
   620     07E3  00FF               	movwf	btemp+1
   621     07E4  3080               	movlw	128
   622     07E5  027F               	subwf	btemp+1,w
   623     07E6  1D03               	skipz
   624     07E7  2FEA               	goto	u265
   625     07E8  3004               	movlw	4
   626     07E9  022C               	subwf	main@i_177,w
   627     07EA                     u265:
   628     07EA  1C03               	skipc
   629     07EB  2FED               	goto	u261
   630     07EC  2FEE               	goto	u260
   631     07ED                     u261:
   632     07ED  2F73               	goto	l756
   633     07EE                     u260:
   634     07EE  2F5E               	goto	l744
   635     07EF  120A  118A  2801   	ljmp	start
   636     07F2                     __end_of_main:
   637                           
   638                           	psect	text1
   639     06C7                     __ptext1:	
   640 ;; *************** function _pic_init *****************
   641 ;; Defined at:
   642 ;;		line 68 in file "newmain.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0, pclath, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 1
   663 ;; This function calls:
   664 ;;		_init_gpio
   665 ;;		_init_osc
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671     06C7                     _pic_init:	
   672                           ;psect for function _pic_init
   673                           
   674     06C7                     l708:	
   675                           ;incstack = 0
   676                           ; Regs used in _pic_init: [wreg+status,2+status,0+pclath+cstack]
   677                           
   678                           
   679                           ;newmain.c: 70:     init_osc();
   680     06C7  120A  118A  26BC  120A  118A  	fcall	_init_osc
   681                           
   682                           ;newmain.c: 71:     init_gpio();
   683     06CC  120A  118A  26D6  120A  118A  	fcall	_init_gpio
   684     06D1                     l710:
   685                           
   686                           ;newmain.c: 72:     PORTA = 0b1111;
   687     06D1  300F               	movlw	15
   688     06D2  1283               	bcf	3,5	;RP0=0, select bank0
   689     06D3  1303               	bcf	3,6	;RP1=0, select bank0
   690     06D4  0085               	movwf	5	;volatile
   691     06D5                     l55:
   692     06D5  0008               	return
   693     06D6                     __end_of_pic_init:
   694                           
   695                           	psect	text2
   696     06BC                     __ptext2:	
   697 ;; *************** function _init_osc *****************
   698 ;; Defined at:
   699 ;;		line 92 in file "newmain.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_pic_init
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726     06BC                     _init_osc:	
   727                           ;psect for function _init_osc
   728                           
   729     06BC                     l688:	
   730                           ;incstack = 0
   731                           ; Regs used in _init_osc: [wreg+status,2+status,0]
   732                           
   733                           
   734                           ;newmain.c: 95:     OSCCONbits.SCS = 0b1;
   735     06BC  1683               	bsf	3,5	;RP0=1, select bank1
   736     06BD  1303               	bcf	3,6	;RP1=0, select bank1
   737     06BE  140F               	bsf	15,0	;volatile
   738     06BF                     l690:
   739                           
   740                           ;newmain.c: 97:     OSCCONbits.IRCF = 0b111;
   741     06BF  3070               	movlw	112
   742     06C0  048F               	iorwf	15,f	;volatile
   743     06C1                     l692:
   744                           
   745                           ;newmain.c: 98:     OSCCONbits.OSTS = 0b1;
   746     06C1  158F               	bsf	15,3	;volatile
   747     06C2                     l61:	
   748                           ;newmain.c: 99:     while (OSCCONbits.HTS != 0b1);
   749                           
   750     06C2  1D0F               	btfss	15,2	;volatile
   751     06C3  2EC5               	goto	u141
   752     06C4  2EC6               	goto	u140
   753     06C5                     u141:
   754     06C5  2EC2               	goto	l61
   755     06C6                     u140:
   756     06C6                     l64:
   757     06C6  0008               	return
   758     06C7                     __end_of_init_osc:
   759                           
   760                           	psect	text3
   761     06D6                     __ptext3:	
   762 ;; *************** function _init_gpio *****************
   763 ;; Defined at:
   764 ;;		line 76 in file "newmain.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_pic_init
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791     06D6                     _init_gpio:	
   792                           ;psect for function _init_gpio
   793                           
   794     06D6                     l694:	
   795                           ;incstack = 0
   796                           ; Regs used in _init_gpio: [wreg+status,2+status,0]
   797                           
   798                           
   799                           ;newmain.c: 78:     TRISA = 0;
   800     06D6  1683               	bsf	3,5	;RP0=1, select bank1
   801     06D7  1303               	bcf	3,6	;RP1=0, select bank1
   802     06D8  0185               	clrf	5	;volatile
   803     06D9                     l696:
   804                           
   805                           ;newmain.c: 79:     TRISEbits.TRISE2 = 1;
   806     06D9  1509               	bsf	9,2	;volatile
   807                           
   808                           ;newmain.c: 81:     ANSEL = 0;
   809     06DA  1683               	bsf	3,5	;RP0=1, select bank3
   810     06DB  1703               	bsf	3,6	;RP1=1, select bank3
   811     06DC  0188               	clrf	8	;volatile
   812                           
   813                           ;newmain.c: 82:     ANSELH = 0;
   814     06DD  0189               	clrf	9	;volatile
   815     06DE                     l698:
   816                           
   817                           ;newmain.c: 83:     ANSELbits.ANS7 = 1;
   818     06DE  1788               	bsf	8,7	;volatile
   819     06DF                     l700:
   820                           
   821                           ;newmain.c: 85:     ADCON0bits.ADCS = 0b10;
   822     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   823     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   824     06E1  081F               	movf	31,w	;volatile
   825     06E2  393F               	andlw	-193
   826     06E3  3880               	iorlw	128
   827     06E4  009F               	movwf	31	;volatile
   828     06E5                     l702:
   829                           
   830                           ;newmain.c: 86:     ADCON0bits.CHS = 0b0111;
   831     06E5  081F               	movf	31,w	;volatile
   832     06E6  39C3               	andlw	-61
   833     06E7  381C               	iorlw	28
   834     06E8  009F               	movwf	31	;volatile
   835     06E9                     l704:
   836                           
   837                           ;newmain.c: 87:     ADCON0bits.ADON = 0b1;
   838     06E9  141F               	bsf	31,0	;volatile
   839     06EA                     l706:
   840                           
   841                           ;newmain.c: 88:     ADCON1bits.ADFM = 0b1;
   842     06EA  1683               	bsf	3,5	;RP0=1, select bank1
   843     06EB  1303               	bcf	3,6	;RP1=0, select bank1
   844     06EC  179F               	bsf	31,7	;volatile
   845     06ED                     l58:
   846     06ED  0008               	return
   847     06EE                     __end_of_init_gpio:
   848                           
   849                           	psect	text4
   850     06EE                     __ptext4:	
   851 ;; *************** function ___wmul *****************
   852 ;; Defined at:
   853 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  multiplier      2    0[COMMON] unsigned int 
   856 ;;  multiplicand    2    2[COMMON] unsigned int 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  product         2    4[COMMON] unsigned int 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  2    0[COMMON] unsigned int 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         4       0       0       0       0
   869 ;;      Locals:         2       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         6       0       0       0       0
   872 ;;Total ram usage:        6 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881     06EE                     ___wmul:	
   882                           ;psect for function ___wmul
   883                           
   884     06EE                     l712:	
   885                           ;incstack = 0
   886                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   887                           
   888     06EE  01F5               	clrf	___wmul@product
   889     06EF  01F6               	clrf	___wmul@product+1
   890     06F0                     l714:
   891     06F0  1C71               	btfss	___wmul@multiplier,0
   892     06F1  2EF3               	goto	u151
   893     06F2  2EF4               	goto	u150
   894     06F3                     u151:
   895     06F3  2EFA               	goto	l150
   896     06F4                     u150:
   897     06F4                     l716:
   898     06F4  0873               	movf	___wmul@multiplicand,w
   899     06F5  07F5               	addwf	___wmul@product,f
   900     06F6  1803               	skipnc
   901     06F7  0AF6               	incf	___wmul@product+1,f
   902     06F8  0874               	movf	___wmul@multiplicand+1,w
   903     06F9  07F6               	addwf	___wmul@product+1,f
   904     06FA                     l150:
   905     06FA  3001               	movlw	1
   906     06FB                     u165:
   907     06FB  1003               	clrc
   908     06FC  0DF3               	rlf	___wmul@multiplicand,f
   909     06FD  0DF4               	rlf	___wmul@multiplicand+1,f
   910     06FE  3EFF               	addlw	-1
   911     06FF  1D03               	skipz
   912     0700  2EFB               	goto	u165
   913     0701                     l718:
   914     0701  3001               	movlw	1
   915     0702                     u175:
   916     0702  1003               	clrc
   917     0703  0CF2               	rrf	___wmul@multiplier+1,f
   918     0704  0CF1               	rrf	___wmul@multiplier,f
   919     0705  3EFF               	addlw	-1
   920     0706  1D03               	skipz
   921     0707  2F02               	goto	u175
   922     0708                     l720:
   923     0708  0871               	movf	___wmul@multiplier,w
   924     0709  0472               	iorwf	___wmul@multiplier+1,w
   925     070A  1D03               	btfss	3,2
   926     070B  2F0D               	goto	u181
   927     070C  2F0E               	goto	u180
   928     070D                     u181:
   929     070D  2EF0               	goto	l714
   930     070E                     u180:
   931     070E                     l722:
   932     070E  0876               	movf	___wmul@product+1,w
   933     070F  00F2               	movwf	?___wmul+1
   934     0710  0875               	movf	___wmul@product,w
   935     0711  00F1               	movwf	?___wmul
   936     0712                     l152:
   937     0712  0008               	return
   938     0713                     __end_of___wmul:
   939     007E                     btemp	set	126	;btemp
   940     007E                     wtemp0	set	126
   941                           
   942                           	psect	config
   943                           
   944                           ;Config register CONFIG1 @ 0x2007
   945                           ;	Oscillator Selection bits
   946                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   947                           ;	Watchdog Timer Enable bit
   948                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   949                           ;	Power-up Timer Enable bit
   950                           ;	PWRTE = ON, PWRT enabled
   951                           ;	RE3/MCLR pin function select bit
   952                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   953                           ;	Code Protection bit
   954                           ;	CP = OFF, Program memory code protection is disabled
   955                           ;	Data Code Protection bit
   956                           ;	CPD = OFF, Data memory code protection is disabled
   957                           ;	Brown Out Reset Selection bits
   958                           ;	BOREN = ON, BOR enabled
   959                           ;	Internal External Switchover bit
   960                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   961                           ;	Fail-Safe Clock Monitor Enabled bit
   962                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   963                           ;	Low Voltage Programming Enable bit
   964                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   965                           ;	In-Circuit Debugger Mode bit
   966                           ;	DEBUG = 0x1, unprogrammed default
   967     2007                     	org	8199
   968     2007  23C4               	dw	9156
   969                           
   970                           ;Config register CONFIG2 @ 0x2008
   971                           ;	Brown-out Reset Selection bit
   972                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   973                           ;	Flash Program Memory Self Write Enable bits
   974                           ;	WRT = OFF, Write protection off
   975     2008                     	org	8200
   976     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     12      12
    BANK0            80     14      22
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     607
                                              6 COMMON     6     6      0
                                              0 BANK0     14    14      0
                             ___wmul
                           _pic_init
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
                          _init_gpio
                           _init_osc
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_gpio                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _pic_init
     _init_gpio
     _init_osc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      C       C       1       92.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Oct 30 11:33:27 2023

                     l42 0765                       l61 06C2                       l55 06D5  
                     l64 06C6                       l58 06ED                       _GO 00F9  
    ___wmul@multiplicand 0073                      l150 06FA                      l152 0712  
                    l700 06DF                      l702 06E5                      l710 06D1  
                    l720 0708                      l712 06EE                      l704 06E9  
                    l722 070E                      l714 06F0                      l706 06EA  
                    l730 0721                      l716 06F4                      l708 06C7  
                    l740 074B                      l732 0727                      l718 0701  
                    l750 0771                      l742 0751                      l726 0713  
                    l760 07A7                      l744 075E                      l728 0718  
                    l690 06BF                      l762 07CA                      l746 0762  
                    l738 072B                      l692 06C1                      l764 07D9  
                    l756 0773                      l748 0769                      l694 06D6  
                    l766 07E1                      l758 0796                      l696 06D9  
                    l688 06BC                      l698 06DE                      u200 075E  
                    u201 075D                      u210 0769                      u211 0768  
                    u140 06C6                      u220 0796                      u141 06C5  
                    u221 0795                      u205 075A                      u150 06F4  
                    u151 06F3                      u240 07CA                      u241 07C9  
                    u225 0792                      u234 079E                      u235 079C  
                    u180 070E                      u260 07EE                      u181 070D  
                    u165 06FB                      u261 07ED                      u245 07C6  
                    u254 07D2                      u190 071C                      u175 0702  
                    u255 07D0                      u265 07EA                      u277 0760  
                    fsr0 0004                      indf 0000                     _main 0713  
                   btemp 007E                     start 0001                    ?_main 0071  
                  _ANSEL 0188                    _PORTA 0005                    _TRISA 0085  
                  main@i 002A                    status 0003                    wtemp0 007E  
        __initialization 07F2             __end_of_main 07F2                   ??_main 0077  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
                 ___wmul 06EE         __end_of_init_osc 06C7         __end_of_pic_init 06D6  
__end_of__initialization 07FC           __pcstackCOMMON 0071               __pbssBANK0 002E  
             __pmaintext 0713                  ?___wmul 0071                ?_init_osc 0071  
              ?_pic_init 0071                _ANSELbits 0188                  __ptext1 06C7  
                __ptext2 06BC                  __ptext3 06D6                  __ptext4 06EE  
      __end_of_init_gpio 06EE                  main@ADR 0020     end_of_initialization 07FC  
             ??_init_osc 0071               ??_pic_init 0071                _TRISEbits 0089  
         __end_of___wmul 0713      start_initialization 07F2                 ??___wmul 0075  
              ___latbits 0002            __pcstackBANK0 0020                _init_gpio 06D6  
         ___wmul@product 0075                main@F1296 002E                main@ADRES 0028  
             _ADCON0bits 001F               _ADCON1bits 009F                main@i_177 002C  
      ___wmul@multiplier 0071               ?_init_gpio 0071                 _init_osc 06BC  
               _pic_init 06C7              ??_init_gpio 0071               _OSCCONbits 008F  
