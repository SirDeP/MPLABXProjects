

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Oct  4 17:12:30 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 17/08/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     008F                     	;# 
    95     0090                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009A                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     0105                     	;# 
   114     0107                     	;# 
   115     0108                     	;# 
   116     0109                     	;# 
   117     010C                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     0185                     	;# 
   123     0187                     	;# 
   124     0188                     	;# 
   125     0189                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0000                     	;# 
   129     0001                     	;# 
   130     0002                     	;# 
   131     0003                     	;# 
   132     0004                     	;# 
   133     0005                     	;# 
   134     0006                     	;# 
   135     0007                     	;# 
   136     0008                     	;# 
   137     0009                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000D                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001B                     	;# 
   159     001C                     	;# 
   160     001D                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     0087                     	;# 
   167     0088                     	;# 
   168     0089                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     008F                     	;# 
   173     0090                     	;# 
   174     0091                     	;# 
   175     0092                     	;# 
   176     0093                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0094                     	;# 
   180     0095                     	;# 
   181     0096                     	;# 
   182     0097                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009A                     	;# 
   186     009B                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     009F                     	;# 
   191     0105                     	;# 
   192     0107                     	;# 
   193     0108                     	;# 
   194     0109                     	;# 
   195     010C                     	;# 
   196     010C                     	;# 
   197     010D                     	;# 
   198     010E                     	;# 
   199     010F                     	;# 
   200     0185                     	;# 
   201     0187                     	;# 
   202     0188                     	;# 
   203     0189                     	;# 
   204     018C                     	;# 
   205     018D                     	;# 
   206     001F                     _ADCON0	set	31
   207     0005                     _PORTA	set	5
   208     001E                     _ADRESH	set	30
   209     00F9                     _GO	set	249
   210     008F                     _OSCCONbits	set	143
   211     009F                     _ADCON1bits	set	159
   212     0089                     _TRISEbits	set	137
   213     0085                     _TRISA	set	133
   214     009E                     _ADRESL	set	158
   215     0189                     _ANSELH	set	393
   216     0188                     _ANSELbits	set	392
   217     0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220     07F2                     start_initialization:	
   221                           ; #config settings
   222                           
   223     07F2                     __initialization:
   224                           
   225                           ; Clear objects allocated to BANK0
   226     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   227     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   228     07F4  01AE               	clrf	__pbssBANK0& (0+127)
   229     07F5  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   230     07F6  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   231     07F7  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   232     07F8  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   233     07F9  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   234     07FA  01B4               	clrf	(__pbssBANK0+6)& (0+127)
   235     07FB  01B5               	clrf	(__pbssBANK0+7)& (0+127)
   236     07FC                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239     07FC                     __end_of__initialization:
   240     07FC  0183               	clrf	3
   241     07FD  120A  118A  2F12   	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssBANK0
   244     002E                     __pbssBANK0:
   245     002E                     main@F1304:
   246     002E                     	ds	8
   247                           
   248                           	psect	cstackCOMMON
   249     0070                     __pcstackCOMMON:
   250     0070                     ?_pic_init:
   251     0070                     ??_pic_init:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?_init_osc:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ??_init_osc:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?_init_gpio:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ??_init_gpio:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     ?___wmul:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ___wmul@multiplier:	
   273                           ; 2 bytes @ 0x0
   274                           
   275                           
   276                           ; 2 bytes @ 0x0
   277     0070                     	ds	2
   278     0072                     ___wmul@multiplicand:
   279                           
   280                           ; 2 bytes @ 0x2
   281     0072                     	ds	2
   282     0074                     ??___wmul:
   283     0074                     ___wmul@product:	
   284                           ; 1 bytes @ 0x4
   285                           
   286                           
   287                           ; 2 bytes @ 0x4
   288     0074                     	ds	2
   289     0076                     ??_main:
   290                           
   291                           ; 1 bytes @ 0x6
   292     0076                     	ds	6
   293                           
   294                           	psect	cstackBANK0
   295     0020                     __pcstackBANK0:
   296     0020                     main@ADR:
   297                           
   298                           ; 8 bytes @ 0x0
   299     0020                     	ds	8
   300     0028                     main@ADRES:
   301                           
   302                           ; 2 bytes @ 0x8
   303     0028                     	ds	2
   304     002A                     main@i:
   305                           
   306                           ; 2 bytes @ 0xA
   307     002A                     	ds	2
   308     002C                     main@i_132:
   309                           
   310                           ; 2 bytes @ 0xC
   311     002C                     	ds	2
   312                           
   313                           	psect	maintext
   314     0712                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 55 in file "newmain.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  i               2   12[BANK0 ] int 
   325 ;;  ADRES           2    8[BANK0 ] int 
   326 ;;  i               2   10[BANK0 ] int 
   327 ;;  ADR             8    0[BANK0 ] int [4]
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0      14       0       0       0
   339 ;;      Temps:          6       0       0       0       0
   340 ;;      Totals:         6      14       0       0       0
   341 ;;Total ram usage:       20 bytes
   342 ;; Hardware stack levels required when called: 2
   343 ;; This function calls:
   344 ;;		___wmul
   345 ;;		_pic_init
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351     0712                     _main:	
   352                           ;psect for function _main
   353                           
   354     0712                     l714:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   357                           
   358                           
   359                           ;newmain.c: 57:     pic_init();
   360     0712  120A  118A  26CD  120A  118A  	fcall	_pic_init
   361                           
   362                           ;newmain.c: 61:     pic_init();
   363     0717  120A  118A  26CD  120A  118A  	fcall	_pic_init
   364     071C                     l716:
   365                           
   366                           ;newmain.c: 62:     int ADR[4] = {0};
   367     071C  3020               	movlw	main@ADR& (0+255)
   368     071D  0084               	movwf	4
   369     071E  3008               	movlw	8
   370     071F  00FF               	movwf	btemp+1
   371     0720                     u190:
   372     0720  1383               	bcf	3,7	;select IRP bank0
   373     0721  0180               	clrf	0
   374     0722  0A84               	incf	4,f
   375     0723  0BFF               	decfsz	btemp+1,f
   376     0724  2F20               	goto	u190
   377     0725                     l718:
   378                           
   379                           ;newmain.c: 63:     ADR[0] = 1023 / (4 + 1);
   380     0725  30CC               	movlw	204
   381     0726  1283               	bcf	3,5	;RP0=0, select bank0
   382     0727  1303               	bcf	3,6	;RP1=0, select bank0
   383     0728  00A0               	movwf	main@ADR
   384     0729  3000               	movlw	0
   385     072A  00A1               	movwf	main@ADR+1
   386     072B                     l720:
   387                           
   388                           ;newmain.c: 65:     for (int i = 1; i < 4; i++)
   389     072B  3001               	movlw	1
   390     072C  00AA               	movwf	main@i
   391     072D  3000               	movlw	0
   392     072E  00AB               	movwf	main@i+1
   393     072F                     l726:
   394                           
   395                           ;newmain.c: 66:         ADR[i] = ADR[0] * (i + 1);
   396     072F  1283               	bcf	3,5	;RP0=0, select bank0
   397     0730  1303               	bcf	3,6	;RP1=0, select bank0
   398     0731  082A               	movf	main@i,w
   399     0732  3E01               	addlw	1
   400     0733  00F0               	movwf	___wmul@multiplier
   401     0734  082B               	movf	main@i+1,w
   402     0735  1803               	skipnc
   403     0736  3E01               	addlw	1
   404     0737  3E00               	addlw	0
   405     0738  00F1               	movwf	___wmul@multiplier+1
   406     0739  0821               	movf	main@ADR+1,w
   407     073A  00F3               	movwf	___wmul@multiplicand+1
   408     073B  0820               	movf	main@ADR,w
   409     073C  00F2               	movwf	___wmul@multiplicand
   410     073D  120A  118A  26ED  120A  118A  	fcall	___wmul
   411     0742  1283               	bcf	3,5	;RP0=0, select bank0
   412     0743  1303               	bcf	3,6	;RP1=0, select bank0
   413     0744  082A               	movf	main@i,w
   414     0745  00F6               	movwf	??_main
   415     0746  0776               	addwf	??_main,w
   416     0747  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   417     0748  0084               	movwf	4
   418     0749  0870               	movf	?___wmul,w
   419     074A  1383               	bcf	3,7	;select IRP bank0
   420     074B  0080               	movwf	0
   421     074C  0A84               	incf	4,f
   422     074D  0871               	movf	?___wmul+1,w
   423     074E  0080               	movwf	0
   424     074F                     l728:
   425     074F  3001               	movlw	1
   426     0750  07AA               	addwf	main@i,f
   427     0751  1803               	skipnc
   428     0752  0AAB               	incf	main@i+1,f
   429     0753  3000               	movlw	0
   430     0754  07AB               	addwf	main@i+1,f
   431     0755                     l730:
   432     0755  082B               	movf	main@i+1,w
   433     0756  3A80               	xorlw	128
   434     0757  00FF               	movwf	btemp+1
   435     0758  3080               	movlw	128
   436     0759  027F               	subwf	btemp+1,w
   437     075A  1D03               	skipz
   438     075B  2F5E               	goto	u205
   439     075C  3004               	movlw	4
   440     075D  022A               	subwf	main@i,w
   441     075E                     u205:
   442     075E  1C03               	skipc
   443     075F  2F61               	goto	u201
   444     0760  2F62               	goto	u200
   445     0761                     u201:
   446     0761  2F2F               	goto	l726
   447     0762                     u200:
   448     0762                     l41:	
   449                           ;newmain.c: 68:     while (1)
   450                           
   451                           
   452                           ;newmain.c: 69:         {;newmain.c: 70:         _delay((unsigned long)((5)*(500000/4000
      +                          000.0)));
   453                           ;newmain.c: 71:         GO = 1;
   454     0762  1283               	bcf	3,5	;RP0=0, select bank0
   455     0763  1303               	bcf	3,6	;RP1=0, select bank0
   456     0764  149F               	bsf	31,1	;volatile
   457     0765                     l42:	
   458                           ;newmain.c: 72:         while (GO)continue;
   459                           
   460     0765  189F               	btfsc	31,1	;volatile
   461     0766  2F68               	goto	u211
   462     0767  2F69               	goto	u210
   463     0768                     u211:
   464     0768  2F65               	goto	l42
   465     0769                     u210:
   466     0769                     l732:
   467                           
   468                           ;newmain.c: 73:         int ADRES = ADRESL + (ADRESH * 256);
   469     0769  081E               	movf	30,w	;volatile
   470     076A  00A9               	movwf	main@ADRES+1
   471     076B  1683               	bsf	3,5	;RP0=1, select bank1
   472     076C  1303               	bcf	3,6	;RP1=0, select bank1
   473     076D  081E               	movf	30,w	;volatile
   474     076E  1283               	bcf	3,5	;RP0=0, select bank0
   475     076F  1303               	bcf	3,6	;RP1=0, select bank0
   476     0770  00A8               	movwf	main@ADRES
   477     0771                     l734:
   478                           
   479                           ;newmain.c: 74:         for (int i = 0; i < 4; i++)
   480     0771  01AC               	clrf	main@i_132
   481     0772  01AD               	clrf	main@i_132+1
   482     0773                     l740:
   483                           
   484                           ;newmain.c: 75:             {;newmain.c: 76:             if (ADRES > (ADR[i] - 20))
   485     0773  1283               	bcf	3,5	;RP0=0, select bank0
   486     0774  1303               	bcf	3,6	;RP1=0, select bank0
   487     0775  082C               	movf	main@i_132,w
   488     0776  00F6               	movwf	??_main
   489     0777  0776               	addwf	??_main,w
   490     0778  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   491     0779  0084               	movwf	4
   492     077A  1383               	bcf	3,7	;select IRP bank0
   493     077B  0800               	movf	0,w
   494     077C  00F7               	movwf	??_main+1
   495     077D  0A84               	incf	4,f
   496     077E  0800               	movf	0,w
   497     077F  00F8               	movwf	??_main+2
   498     0780  0877               	movf	??_main+1,w
   499     0781  3EEC               	addlw	236
   500     0782  00F9               	movwf	??_main+3
   501     0783  0878               	movf	??_main+2,w
   502     0784  1803               	skipnc
   503     0785  3E01               	addlw	1
   504     0786  3EFF               	addlw	255
   505     0787  00FA               	movwf	??_main+4
   506     0788  087A               	movf	??_main+4,w
   507     0789  3A80               	xorlw	128
   508     078A  00FB               	movwf	??_main+5
   509     078B  0829               	movf	main@ADRES+1,w
   510     078C  3A80               	xorlw	128
   511     078D  027B               	subwf	??_main+5,w
   512     078E  1D03               	skipz
   513     078F  2F92               	goto	u225
   514     0790  0828               	movf	main@ADRES,w
   515     0791  0279               	subwf	??_main+3,w
   516     0792                     u225:
   517     0792  1803               	skipnc
   518     0793  2F95               	goto	u221
   519     0794  2F96               	goto	u220
   520     0795                     u221:
   521     0795  2FA7               	goto	l744
   522     0796                     u220:
   523     0796                     l742:
   524                           
   525                           ;newmain.c: 77:                 {;newmain.c: 79:                 PORTA &= ~(1 << i);
   526     0796  3001               	movlw	1
   527     0797  00F6               	movwf	??_main
   528     0798  1283               	bcf	3,5	;RP0=0, select bank0
   529     0799  1303               	bcf	3,6	;RP1=0, select bank0
   530     079A  0A2C               	incf	main@i_132,w
   531     079B  2F9E               	goto	u234
   532     079C                     u235:
   533     079C  1003               	clrc
   534     079D  0DF6               	rlf	??_main,f
   535     079E                     u234:
   536     079E  3EFF               	addlw	-1
   537     079F  1D03               	skipz
   538     07A0  2F9C               	goto	u235
   539     07A1  0876               	movf	??_main,w
   540     07A2  3AFF               	xorlw	255
   541     07A3  00F7               	movwf	??_main+1
   542     07A4  0877               	movf	??_main+1,w
   543     07A5  0585               	andwf	5,f	;volatile
   544                           
   545                           ;newmain.c: 80:                 }
   546     07A6  2FD9               	goto	l748
   547     07A7                     l744:
   548     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   549     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   550     07A9  082C               	movf	main@i_132,w
   551     07AA  00F6               	movwf	??_main
   552     07AB  0776               	addwf	??_main,w
   553     07AC  3E20               	addlw	(low (main@ADR| 0))& (0+255)
   554     07AD  0084               	movwf	4
   555     07AE  1383               	bcf	3,7	;select IRP bank0
   556     07AF  0800               	movf	0,w
   557     07B0  00F7               	movwf	??_main+1
   558     07B1  0A84               	incf	4,f
   559     07B2  0800               	movf	0,w
   560     07B3  00F8               	movwf	??_main+2
   561     07B4  0877               	movf	??_main+1,w
   562     07B5  3EEC               	addlw	236
   563     07B6  00F9               	movwf	??_main+3
   564     07B7  0878               	movf	??_main+2,w
   565     07B8  1803               	skipnc
   566     07B9  3E01               	addlw	1
   567     07BA  3EFF               	addlw	255
   568     07BB  00FA               	movwf	??_main+4
   569     07BC  087A               	movf	??_main+4,w
   570     07BD  3A80               	xorlw	128
   571     07BE  00FB               	movwf	??_main+5
   572     07BF  0829               	movf	main@ADRES+1,w
   573     07C0  3A80               	xorlw	128
   574     07C1  027B               	subwf	??_main+5,w
   575     07C2  1D03               	skipz
   576     07C3  2FC6               	goto	u245
   577     07C4  0828               	movf	main@ADRES,w
   578     07C5  0279               	subwf	??_main+3,w
   579     07C6                     u245:
   580     07C6  1C03               	skipc
   581     07C7  2FC9               	goto	u241
   582     07C8  2FCA               	goto	u240
   583     07C9                     u241:
   584     07C9  2FD9               	goto	l748
   585     07CA                     u240:
   586     07CA                     l746:
   587                           
   588                           ;newmain.c: 82:                 {;newmain.c: 83:                 PORTA |= (1 << i);
   589     07CA  3001               	movlw	1
   590     07CB  00F6               	movwf	??_main
   591     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   592     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   593     07CE  0A2C               	incf	main@i_132,w
   594     07CF  2FD2               	goto	u254
   595     07D0                     u255:
   596     07D0  1003               	clrc
   597     07D1  0DF6               	rlf	??_main,f
   598     07D2                     u254:
   599     07D2  3EFF               	addlw	-1
   600     07D3  1D03               	skipz
   601     07D4  2FD0               	goto	u255
   602     07D5  0876               	movf	??_main,w
   603     07D6  00F7               	movwf	??_main+1
   604     07D7  0877               	movf	??_main+1,w
   605     07D8  0485               	iorwf	5,f	;volatile
   606     07D9                     l748:
   607                           
   608                           ;newmain.c: 86:             }
   609     07D9  3001               	movlw	1
   610     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   611     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   612     07DC  07AC               	addwf	main@i_132,f
   613     07DD  1803               	skipnc
   614     07DE  0AAD               	incf	main@i_132+1,f
   615     07DF  3000               	movlw	0
   616     07E0  07AD               	addwf	main@i_132+1,f
   617     07E1                     l750:
   618     07E1  082D               	movf	main@i_132+1,w
   619     07E2  3A80               	xorlw	128
   620     07E3  00FF               	movwf	btemp+1
   621     07E4  3080               	movlw	128
   622     07E5  027F               	subwf	btemp+1,w
   623     07E6  1D03               	skipz
   624     07E7  2FEA               	goto	u265
   625     07E8  3004               	movlw	4
   626     07E9  022C               	subwf	main@i_132,w
   627     07EA                     u265:
   628     07EA  1C03               	skipc
   629     07EB  2FED               	goto	u261
   630     07EC  2FEE               	goto	u260
   631     07ED                     u261:
   632     07ED  2F73               	goto	l740
   633     07EE                     u260:
   634     07EE  2F62               	goto	l41
   635     07EF  120A  118A  2800   	ljmp	start
   636     07F2                     __end_of_main:
   637                           
   638                           	psect	text1
   639     06CD                     __ptext1:	
   640 ;; *************** function _pic_init *****************
   641 ;; Defined at:
   642 ;;		line 90 in file "newmain.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0, pclath, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 1
   663 ;; This function calls:
   664 ;;		_init_gpio
   665 ;;		_init_osc
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671     06CD                     _pic_init:	
   672                           ;psect for function _pic_init
   673                           
   674     06CD                     l696:	
   675                           ;incstack = 0
   676                           ; Regs used in _pic_init: [wreg+status,2+status,0+pclath+cstack]
   677                           
   678                           
   679                           ;newmain.c: 92:     init_osc();
   680     06CD  120A  118A  26C0  120A  118A  	fcall	_init_osc
   681                           
   682                           ;newmain.c: 93:     init_gpio();
   683     06D2  120A  118A  26DC  120A  118A  	fcall	_init_gpio
   684     06D7                     l698:
   685                           
   686                           ;newmain.c: 94:     PORTA = 0b1111;
   687     06D7  300F               	movlw	15
   688     06D8  1283               	bcf	3,5	;RP0=0, select bank0
   689     06D9  1303               	bcf	3,6	;RP1=0, select bank0
   690     06DA  0085               	movwf	5	;volatile
   691     06DB                     l55:
   692     06DB  0008               	return
   693     06DC                     __end_of_pic_init:
   694                           
   695                           	psect	text2
   696     06C0                     __ptext2:	
   697 ;; *************** function _init_osc *****************
   698 ;; Defined at:
   699 ;;		line 110 in file "newmain.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_pic_init
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726     06C0                     _init_osc:	
   727                           ;psect for function _init_osc
   728                           
   729     06C0                     l680:	
   730                           ;incstack = 0
   731                           ; Regs used in _init_osc: [wreg+status,2+status,0]
   732                           
   733                           
   734                           ;newmain.c: 114:     OSCCONbits.SCS = 0b1;
   735     06C0  1683               	bsf	3,5	;RP0=1, select bank1
   736     06C1  1303               	bcf	3,6	;RP1=0, select bank1
   737     06C2  140F               	bsf	15,0	;volatile
   738     06C3                     l682:
   739                           
   740                           ;newmain.c: 116:     OSCCONbits.IRCF = 0b100;
   741     06C3  080F               	movf	15,w	;volatile
   742     06C4  398F               	andlw	-113
   743     06C5  3840               	iorlw	64
   744     06C6  008F               	movwf	15	;volatile
   745     06C7                     l684:
   746                           
   747                           ;newmain.c: 117:     OSCCONbits.OSTS = 0b1;
   748     06C7  158F               	bsf	15,3	;volatile
   749     06C8                     l61:	
   750                           ;newmain.c: 118:     while (OSCCONbits.HTS != 0b1);
   751                           
   752     06C8  1D0F               	btfss	15,2	;volatile
   753     06C9  2ECB               	goto	u141
   754     06CA  2ECC               	goto	u140
   755     06CB                     u141:
   756     06CB  2EC8               	goto	l61
   757     06CC                     u140:
   758     06CC                     l64:
   759     06CC  0008               	return
   760     06CD                     __end_of_init_osc:
   761                           
   762                           	psect	text3
   763     06DC                     __ptext3:	
   764 ;; *************** function _init_gpio *****************
   765 ;; Defined at:
   766 ;;		line 98 in file "newmain.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_pic_init
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793     06DC                     _init_gpio:	
   794                           ;psect for function _init_gpio
   795                           
   796     06DC                     l686:	
   797                           ;incstack = 0
   798                           ; Regs used in _init_gpio: [wreg+status,2]
   799                           
   800                           
   801                           ;newmain.c: 100:     TRISA = 0;
   802     06DC  1683               	bsf	3,5	;RP0=1, select bank1
   803     06DD  1303               	bcf	3,6	;RP1=0, select bank1
   804     06DE  0185               	clrf	5	;volatile
   805     06DF                     l688:
   806                           
   807                           ;newmain.c: 101:     TRISEbits.TRISE2 = 1;
   808     06DF  1509               	bsf	9,2	;volatile
   809                           
   810                           ;newmain.c: 102:     ANSEL = 0;
   811     06E0  1683               	bsf	3,5	;RP0=1, select bank3
   812     06E1  1703               	bsf	3,6	;RP1=1, select bank3
   813     06E2  0188               	clrf	8	;volatile
   814     06E3                     l690:
   815                           
   816                           ;newmain.c: 103:     ANSELbits.ANS7 = 1;
   817     06E3  1788               	bsf	8,7	;volatile
   818                           
   819                           ;newmain.c: 104:     ANSELH = 0;
   820     06E4  0189               	clrf	9	;volatile
   821     06E5                     l692:
   822                           
   823                           ;newmain.c: 105:     ADCON0 = 0b00011111;
   824     06E5  301F               	movlw	31
   825     06E6  1283               	bcf	3,5	;RP0=0, select bank0
   826     06E7  1303               	bcf	3,6	;RP1=0, select bank0
   827     06E8  009F               	movwf	31	;volatile
   828     06E9                     l694:
   829                           
   830                           ;newmain.c: 106:     ADCON1bits.ADFM = 1;
   831     06E9  1683               	bsf	3,5	;RP0=1, select bank1
   832     06EA  1303               	bcf	3,6	;RP1=0, select bank1
   833     06EB  179F               	bsf	31,7	;volatile
   834     06EC                     l58:
   835     06EC  0008               	return
   836     06ED                     __end_of_init_gpio:
   837                           
   838                           	psect	text4
   839     06ED                     __ptext4:	
   840 ;; *************** function ___wmul *****************
   841 ;; Defined at:
   842 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  multiplier      2    0[COMMON] unsigned int 
   845 ;;  multiplicand    2    2[COMMON] unsigned int 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  product         2    4[COMMON] unsigned int 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  2    0[COMMON] unsigned int 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         4       0       0       0       0
   858 ;;      Locals:         2       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0
   860 ;;      Totals:         6       0       0       0       0
   861 ;;Total ram usage:        6 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870     06ED                     ___wmul:	
   871                           ;psect for function ___wmul
   872                           
   873     06ED                     l700:	
   874                           ;incstack = 0
   875                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   876                           
   877     06ED  01F4               	clrf	___wmul@product
   878     06EE  01F5               	clrf	___wmul@product+1
   879     06EF                     l702:
   880     06EF  1C70               	btfss	___wmul@multiplier,0
   881     06F0  2EF2               	goto	u151
   882     06F1  2EF3               	goto	u150
   883     06F2                     u151:
   884     06F2  2EF9               	goto	l150
   885     06F3                     u150:
   886     06F3                     l704:
   887     06F3  0872               	movf	___wmul@multiplicand,w
   888     06F4  07F4               	addwf	___wmul@product,f
   889     06F5  1803               	skipnc
   890     06F6  0AF5               	incf	___wmul@product+1,f
   891     06F7  0873               	movf	___wmul@multiplicand+1,w
   892     06F8  07F5               	addwf	___wmul@product+1,f
   893     06F9                     l150:
   894     06F9  3001               	movlw	1
   895     06FA                     u165:
   896     06FA  1003               	clrc
   897     06FB  0DF2               	rlf	___wmul@multiplicand,f
   898     06FC  0DF3               	rlf	___wmul@multiplicand+1,f
   899     06FD  3EFF               	addlw	-1
   900     06FE  1D03               	skipz
   901     06FF  2EFA               	goto	u165
   902     0700                     l706:
   903     0700  3001               	movlw	1
   904     0701                     u175:
   905     0701  1003               	clrc
   906     0702  0CF1               	rrf	___wmul@multiplier+1,f
   907     0703  0CF0               	rrf	___wmul@multiplier,f
   908     0704  3EFF               	addlw	-1
   909     0705  1D03               	skipz
   910     0706  2F01               	goto	u175
   911     0707                     l708:
   912     0707  0870               	movf	___wmul@multiplier,w
   913     0708  0471               	iorwf	___wmul@multiplier+1,w
   914     0709  1D03               	btfss	3,2
   915     070A  2F0C               	goto	u181
   916     070B  2F0D               	goto	u180
   917     070C                     u181:
   918     070C  2EEF               	goto	l702
   919     070D                     u180:
   920     070D                     l710:
   921     070D  0875               	movf	___wmul@product+1,w
   922     070E  00F1               	movwf	?___wmul+1
   923     070F  0874               	movf	___wmul@product,w
   924     0710  00F0               	movwf	?___wmul
   925     0711                     l152:
   926     0711  0008               	return
   927     0712                     __end_of___wmul:
   928     007E                     btemp	set	126	;btemp
   929     007E                     wtemp0	set	126
   930                           
   931                           	psect	config
   932                           
   933                           ;Config register CONFIG1 @ 0x2007
   934                           ;	Oscillator Selection bits
   935                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   936                           ;	Watchdog Timer Enable bit
   937                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   938                           ;	Power-up Timer Enable bit
   939                           ;	PWRTE = ON, PWRT enabled
   940                           ;	RE3/MCLR pin function select bit
   941                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   942                           ;	Code Protection bit
   943                           ;	CP = OFF, Program memory code protection is disabled
   944                           ;	Data Code Protection bit
   945                           ;	CPD = OFF, Data memory code protection is disabled
   946                           ;	Brown Out Reset Selection bits
   947                           ;	BOREN = ON, BOR enabled
   948                           ;	Internal External Switchover bit
   949                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   950                           ;	Fail-Safe Clock Monitor Enabled bit
   951                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   952                           ;	Low Voltage Programming Enable bit
   953                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   954                           ;	In-Circuit Debugger Mode bit
   955                           ;	DEBUG = 0x1, unprogrammed default
   956     2007                     	org	8199
   957     2007  23C4               	dw	9156
   958                           
   959                           ;Config register CONFIG2 @ 0x2008
   960                           ;	Brown-out Reset Selection bit
   961                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   962                           ;	Flash Program Memory Self Write Enable bits
   963                           ;	WRT = OFF, Write protection off
   964     2008                     	org	8200
   965     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     14      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     607
                                              6 COMMON     6     6      0
                                              0 BANK0     14    14      0
                             ___wmul
                           _pic_init
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
                          _init_gpio
                           _init_osc
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_gpio                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _pic_init
     _init_gpio
     _init_osc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Oct  4 17:12:30 2023

                     l41 0762                       l42 0765                       l61 06C8  
                     l55 06DB                       l64 06CC                       l58 06EC  
                     _GO 00F9      ___wmul@multiplicand 0072                      l150 06F9  
                    l152 0711                      l700 06ED                      l710 070D  
                    l702 06EF                      l704 06F3                      l720 072B  
                    l706 0700                      l730 0755                      l714 0712  
                    l708 0707                      l740 0773                      l732 0769  
                    l716 071C                      l750 07E1                      l742 0796  
                    l734 0771                      l726 072F                      l718 0725  
                    l680 06C0                      l744 07A7                      l728 074F  
                    l690 06E3                      l682 06C3                      l746 07CA  
                    l692 06E5                      l684 06C7                      l748 07D9  
                    l694 06E9                      l686 06DC                      l688 06DF  
                    l696 06CD                      l698 06D7                      u200 0762  
                    u201 0761                      u210 0769                      u211 0768  
                    u140 06CC                      u220 0796                      u141 06CB  
                    u221 0795                      u205 075E                      u150 06F3  
                    u151 06F2                      u240 07CA                      u241 07C9  
                    u225 0792                      u234 079E                      u235 079C  
                    u180 070D                      u260 07EE                      u181 070C  
                    u165 06FA                      u261 07ED                      u245 07C6  
                    u254 07D2                      u190 0720                      u175 0701  
                    u255 07D0                      u265 07EA                      fsr0 0004  
                    indf 0000                     _main 0712                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _TRISA 0085                    main@i 002A  
                  status 0003                    wtemp0 007E          __initialization 07F2  
           __end_of_main 07F2                   ??_main 0076                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
                 ___wmul 06ED         __end_of_init_osc 06CD         __end_of_pic_init 06DC  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pbssBANK0 002E  
             __pmaintext 0712                  ?___wmul 0070                ?_init_osc 0070  
              ?_pic_init 0070                _ANSELbits 0188                  __ptext1 06CD  
                __ptext2 06C0                  __ptext3 06DC                  __ptext4 06ED  
      __end_of_init_gpio 06ED                  main@ADR 0020     end_of_initialization 07FC  
             ??_init_osc 0070               ??_pic_init 0070                _TRISEbits 0089  
         __end_of___wmul 0712      start_initialization 07F2                 ??___wmul 0074  
              ___latbits 0002            __pcstackBANK0 0020                _init_gpio 06DC  
         ___wmul@product 0074                main@F1304 002E                main@ADRES 0028  
             _ADCON1bits 009F                main@i_132 002C        ___wmul@multiplier 0070  
             ?_init_gpio 0070                 _init_osc 06C0                 _pic_init 06CD  
            ??_init_gpio 0070               _OSCCONbits 008F  
